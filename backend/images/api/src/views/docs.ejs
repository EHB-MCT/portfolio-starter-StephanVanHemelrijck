<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <title><%= title%></title>
    <style>
      /* Adjust styles as needed */
      body {
        padding-top: 56px;
      }

      .sidebar {
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        z-index: 1000;
        padding: 48px 0;
        box-shadow: inset -1px 0 0 rgba(0, 0, 0, 0.1);
      }

      .sidebar-sticky {
        position: relative;
        top: 0;
        height: calc(100vh - 48px);
        padding-top: 0.5rem;
        overflow-x: hidden;
        overflow-y: auto;
      }

      .json{
        background-color: #f8f9fa;
        font-family: monospace;
        color: #28a745; /* Green color for keys */
      }

      @media (min-width: 768px) {
        .sidebar {
          padding-top: 56px;
        }
      }
    </style>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
      <a class="navbar-brand" href="#">GameLibrary - API Documentation<a>
     
      <div class="collapse navbar-collapse" id="navbarNav">
        <!-- Add additional navigation items here if needed -->
      </div>
    </nav>

    <div class="container-fluid">
      <div class="row">
        <nav class="col-md-2 d-none d-md-block sidebar">
          <div class="sidebar-sticky">
            <!-- Sidebar Navigation -->
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link active" href="#get_all_users">
                        Get All Users
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#get_user_by_id">
                        Get User By Id
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#create_user">
                        Create User
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#update_user_by_id">
                        Update User By Id
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#delete_user_by_id">
                        Delete User By Id
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="#get_all_games">
                        Get All Games
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#get_game_by_id">
                        Get Game By Id
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#create_game">
                        Create Game
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#update_game_by_id">
                        Update Game By Id
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#delete_game_by_id">
                        Delete Game By Id
                    </a>
                </li>
                <!-- Add more navigation items for other endpoints -->
            </ul>
          </div>
        </nav>

        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
            <div class="container mt-4">
                <header class="text-center">
                  <h1 class="mt-5">RESTful API Documentation</h1>
                  <p class="lead">Explore the comprehensive guide to interacting with the Node.js API. Manage users and games effortlessly with our clear and concise documentation.</p>
                </header>
            
                <section class="mt-5">
                  <h2>Overview</h2>
                  <p>The API is built using Node.js and Docker, ensuring scalability and ease of deployment. You'll find detailed information on creating, updating, retrieving, and deleting users and games. The documentation includes example requests, expected responses, and clear explanations for each endpoint.</p>
                </section>
            
                <section class="mt-5">
                    <h2>Authors</h2>
                    <ul>
                      <li><a href="https://www.linkedin.com/in/stephan-van-hemelrijck-736655234/?originalSubdomain=be" target="_blank">Stephan Van Hemelrijck</a></li>
                    </ul>
                    <p>Feel free to explore the navigation sidebar to quickly jump to specific sections of interest. If you have any questions or need assistance, refer to the contact details provided by the authors.</p>
                  </section>
              </div>

          <!-- Get All Users Endpoint Section -->
            <div id="get_all_users" class="card mt-5">
            <div class="card-header">
                <h2 class="mb-0">Endpoint: /api/users</h2>
            </div>
            <div class="card-body">
                <p class="card-text">Get all users from the API.</p>

                <h5 class="mt-3">
                Method: <span class="badge badge-primary">GET</span>
                </h5>
                <h5>Parameters:</h5>
                <h5>Response:</h5>
                <pre class="json"><code>
    [
        {
            "id": 1,
            "username": "JohnDoe",
            "email": "john@example.com"
            "created_at": "2024-01-07T07:21:03.447Z",
            "updated_at": "2024-01-07T07:21:03.447Z"
        },
        {
            "id": 2,
            "username": "JaneDoe",
            "email": "jane@example.com"
            "created_at": "2024-01-07T07:21:03.447Z",
            "updated_at": "2024-01-07T07:21:03.447Z"
        },
        ...
    ]
                </code></pre>
            </div>
            </div>

            <!-- Get User By Id Endpoint Section -->
            <div id="get_user_by_id" class="card mt-3">
            <div class="card-header">
                <h2 class="mb-0">Endpoint: /api/users/:id</h2>
            </div>
            <div class="card-body">
                <p class="card-text">Get a user by their ID from the API.</p>

                <h5 class="mt-3">
                Method: <span class="badge badge-primary">GET</span>
                </h5>
                <h5>Parameters:</h5>
                <ul>
                <li><strong>id:</strong> User ID (number) - The ID of the user to retrieve.</li>
                </ul>
                <h5>Response:</h5>
                <pre class="json"><code>
    {
        "id": 1,
        "username": "JohnDoe",
        "email": "john@example.com"
        "created_at": "2024-01-07T07:21:03.447Z",
        "updated_at": "2024-01-07T07:21:03.447Z"
    },
                </code></pre>
            </div>
            </div>

            <!-- Create User Endpoint Section -->
            <div id="create_user" class="card mt-3">
            <div class="card-header">
                <h2 class="mb-0">Endpoint: /api/users</h2>
            </div>
            <div class="card-body">
                <p class="card-text">Create a new user using the API.</p>

                <h5 class="mt-3">
                Method: <span class="badge badge-primary">POST</span>
                </h5>
                <h5>Parameters:</h5>
                <ul>
                <li><strong>body:</strong> User Data (Object) - The data for creating a new user.</li>
                </ul>
                <pre class="json"><code>
    {
        "username": "JohnDoe",
        "email": "john@example.com",
        "password": "password"
    },
                </code></pre>

                <h5>Response:</h5>
                <pre class="json"><code>
    {
        "id": 1,
        "username": "JohnDoe",
        "email": "john@example.com"
        "created_at": "2024-01-07T07:21:03.447Z",
        "updated_at": "2024-01-07T07:21:03.447Z"
    },
                    </code></pre>
            </div>
            </div>

            <!-- Update User By Id Endpoint Section -->
            <div id="update_user_by_id" class="card mt-3">
            <div class="card-header">
                <h2 class="mb-0">Endpoint: /api/users/:id</h2>
            </div>
            <div class="card-body">
                <p class="card-text">Update a user by their ID using the API.</p>

                <h5 class="mt-3">
                Method: <span class="badge badge-primary">PUT</span>
                </h5>
                <h5>Parameters:</h5>
                <ul>
                <li><strong>id:</strong> User ID (number) - The ID of the user to update.</li>
                <li><strong>body:</strong> User Data (Object) - The updated data for the user. Having at least one of the following fields: username, email or password</li>
                </ul>

                <h5>Response:</h5>
                <pre class="json"><code>
    {
        "id": 1,
        "username": "UpdatedUser",
        "email": "updated@example.com"
        "created_at": "2024-01-07T07:21:03.447Z",
        "updated_at": "2024-01-07T07:21:03.447Z"
    }
                </code></pre>
            </div>
            </div>

            <!-- Delete User By Id Endpoint Section -->
            <div id="delete_user_by_id" class="card mt-3">
            <div class="card-header">
                <h2 class="mb-0">Endpoint: /api/users/:id</h2>
            </div>
            <div class="card-body">
                <p class="card-text">Delete a user by their ID using the API.</p>

                <h5 class="mt-3">
                Method: <span class="badge badge-primary">DELETE</span>
                </h5>
                <h5>Parameters:</h5>
                <ul>
                <li><strong>id:</strong> User ID (number) - The ID of the user to delete.</li>
                </ul>

                <h5>Response:</h5>
                <pre class="json"><code>
    {
        "id": 1,
        "username": "DeletedUser",
        "email": "deleted@example.com"
        "created_at": "2024-01-07T07:21:03.447Z",
        "updated_at": "2024-01-07T07:21:03.447Z"
    }
                </code></pre>   
            </div>
            </div>

         <!-- Get All Games Endpoint Section -->
    <div id="get_all_games" class="card mt-3">
        <div class="card-header">
            <h2 class="mb-0">Endpoint: /api/games</h2>
        </div>
        <div class="card-body">
            <p class="card-text">Get all games from the API.</p>

            <h5 class="mt-3">
                Method: <span class="badge badge-primary">GET</span>
            </h5>
            <h5>Parameters:</h5>
            <!-- No parameters for this endpoint -->
            <h5>Response:</h5>
            <pre class="json"><code>
[
    {
        "id": 1,
        "name": "THE FINALS",
        "description": "Join THE FINALS, the world-famous, free-to-play, combat-centered game show! Fight alongside your teammates in virtual arenas that you can alter, exploit, and even destroy. Build your own playstyle in this first-person shooter to win escalating tournaments and lasting fame.",
        "image": "https://cdn.akamai.steamstatic.com/steam/apps/2073850/header.jpg?t=1702495066",
        "price": "Free To Play",
        "rating": {
            "comment": "Mostly Positive",
            "reviewers": 104645
        },
        "release_date": "2023-12-08T00:00:00.000+00:00",
        "developer": "Embark Studios"
    },
    {
        "id": 2,
        "name": "The Elder Scrolls V: Skyrim Special Edition",
        "description": "Winner of more than 200 Game of the Year Awards, Skyrim Special Edition brings the epic fantasy to life in stunning detail. The Special Edition includes the critically acclaimed game and add-ons with all-new features like remastered art and effects, volumetric god rays, dynamic depth of field, screen-space reflections, and more.",
        "image": "https://cdn.akamai.steamstatic.com/steam/apps/489830/header.jpg?t=1628602000",
        "price": "$39.99",
        "rating": {
            "comment": "Very Positive",
            "reviewers": 138677
        },
        "release_date": "2016-10-27T00:00:00.000+00:00",
        "developer": "Bethesda Game Studios"
    },
    ...
]
                </code></pre>
        </div>
    </div>

    <!-- Get Game By Id Endpoint Section -->
    <div id="get_game_by_id" class="card mt-3">
        <div class="card-header">
            <h2 class="mb-0">Endpoint: /api/games/:id</h2>
        </div>
        <div class="card-body">
            <p class="card-text">Get a game by its ID from the API.</p>

            <h5 class="mt-3">
                Method: <span class="badge badge-primary">GET</span>
            </h5>
            <h5>Parameters:</h5>
            <ul>
                <li><strong>id:</strong> Game ID (number) - The ID of the game to retrieve.</li>
            </ul>
            <h5>Response:</h5>
            <pre class="json"><code>
{
    "id": 1,
    "name": "THE FINALS",
    "description": "Join THE FINALS, the world-famous, free-to-play, combat-centered game show! Fight alongside your teammates in virtual arenas that you can alter, exploit, and even destroy. Build your own playstyle in this first-person shooter to win escalating tournaments and lasting fame.",
    "image": "https://cdn.akamai.steamstatic.com/steam/apps/2073850/header.jpg?t=1702495066",
    "price": "Free To Play",
    "rating": {
        "comment": "Mostly Positive",
        "reviewers": 104645
    },
    "release_date": "2023-12-08T00:00:00.000+00:00",
    "developer": "Embark Studios"
},
                </code></pre>
        </div>
    </div>

    <!-- Create Game Endpoint Section -->
    <div id="create_game" class="card mt-3">
        <div class="card-header">
            <h2 class="mb-0">Endpoint: /api/games</h2>
        </div>
        <div class="card-body">
            <p class="card-text">Create a new game using the API.</p>

            <h5 class="mt-3">
                Method: <span class="badge badge-primary">POST</span>
            </h5>
            <h5>Parameters:</h5>
            <ul>
                <li><strong>body:</strong> Game Data (Object) - The data for creating a new game.</li>
            </ul>
            <pre class="json"><code>
{
    "id": 2,
    "name": "ANOTHER GAME",
    "description": "Description of another game.",
    "image": "https://example.com/another_game.jpg",
    "price": "Free To Play",
    "release_date": "2024-01-07T12:30:00.000+00:00",
    "developer": "Another Studio"
}
                </code></pre>

            <h5>Response:</h5>
            <pre class="json"><code>
{
    "id": 2,
    "name": "ANOTHER GAME",
    "description": "Description of another game.",
    "image": "https://example.com/another_game.jpg",
    "price": "Free To Play",
    "rating": {
        "comment": "N/A",
        "reviewers": 0
    },
    "release_date": "2024-01-07T12:30:00.000+00:00",
    "developer": "Another Studio"
}
                </code></pre>
        </div>
    </div>

    <!-- Update Game By Id Endpoint Section -->
    <div id="update_game_by_id" class="card mt-3">
        <div class="card-header">
            <h2 class="mb-0">Endpoint: /api/games/:id</h2>
        </div>
        <div class="card-body">
            <p class="card-text">Update a game by its ID using the API.</p>

            <h5 class="mt-3">
                Method: <span class="badge badge-primary">PUT</span>
            </h5>
            <h5>Parameters:</h5>
            <ul>
                <li><strong>id:</strong> Game ID (number) - The ID of the game to update.</li>
                <li><strong>body:</strong> Game Data (Object) - The updated data for the game. Having at least one of the following fields: name, description, image, price, release_date or developer</li>
            </ul>

            <h5>Response:</h5>
            <pre class="json"><code>
{
    "id": 3,
    "name": "UPDATED GAME",
    "description": "Updated description of the game.",
    "image": "https://updated-game-image-url.com",
    "price": "Paid",
    "rating": {
        "comment": "Positive",
        "reviewers": 8000
    },
    "release_date": "2024-01-15T14:30:00.000+00:00",
    "developer": "Updated Studios",
}
                </code></pre>
        </div>
    </div>

    <!-- Delete Game By Id Endpoint Section -->
    <div id="delete_game_by_id" class="card mt-3">
        <div class="card-header">
            <h2 class="mb-0">Endpoint: /api/games/:id</h2>
        </div>
        <div class="card-body">
            <p class="card-text">Delete a game by its ID using the API.</p>

            <h5 class="mt-3">
                Method: <span class="badge badge-primary">DELETE</span>
            </h5>
            <h5>Parameters:</h5>
            <ul>
                <li><strong>id:</strong> Game ID (number) - The ID of the game to delete.</li>
            </ul>

            <h5>Response:</h5>
            <pre class="json"><code>
{
    "id": 4,
    "name": "DELETED GAME",
    "description": "Description of the deleted game.",
    "image": "https://deleted-game-image-url.com",
    "price": "Paid",
    "rating": {
        "comment": "Positive",
        "reviewers": 5000
    },
    "release_date": "2023-11-20T18:45:00.000+00:00",
    "developer": "Deleted Studios",
}
                </code></pre>
        </div>
    </div>

    <!-- Add more endpoint sections as needed -->
        </main>
      </div>
    </div>

    <!-- Bootstrap JS and jQuery (optional) for collapsible sections -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  </body>
</html>
